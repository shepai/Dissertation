\documentclass{article}

% Language setting
% Replace `english' with e.g. `spanish' to change the document language
\usepackage[english]{babel}

% Set page size and margins
% Replace `letterpaper' with`a4paper' for UK/EU standard size
\usepackage[letterpaper,top=2cm,bottom=2cm,left=3cm,right=3cm,marginparwidth=1.75cm]{geometry}

% Useful packages
\usepackage{amsmath}
\usepackage{graphicx}
\usepackage{caption}
\usepackage{subcaption}
\usepackage[colorlinks=true, allcolors=blue]{hyperref}
\usepackage{float}

\title{Bio-Inspired Robotic Navigation On Varied Terrain
\\\\
\large Interim report}

\author{Dexter R Shepherd [candNo: 215819] \\ Supervisor: Dr James Knight}


\begin{document}
\maketitle

\newpage
\tableofcontents
\newpage

\section{Introduction}

This dissertation studies autonomous robotic navigation through localized decisions based on previous experience. Nearly all organisms are limited at some point when it comes to movement. An octopus can fit through an aperture that is bigger than its beak \cite{octopus}. A person can climb over rocks, but only if they have grip points for hands and feet. These environmental barriers define conditions to an organism’s ability to traverse across it. When a path looks too arduous, we will often choose a more accessible route if possible. 

These constraints comply with robotics also. Consider a Mars Rover over 395 million km away from the nearest person, if the Rover were to get obstructed there would be no one to recover it. In addition, it takes 181 seconds for a signal to get from Earth to Mars; thus, real-time control over changes in an environment will have taken effect by the time the signal arrives. A robot to self-preserve, like an organism, will need to know its limitations and not attempt tasks of movement outside these physical constraints. \cite{reinforcementLearning} 

When deciding on routes, there may be the scenario that all paths are within the constraints. Some are simpler to navigate through than others. The agent will need to pick the option which requires the “least” effort. The best-case scenario is defined by the level of complexity of movement necessary to overcome the obstacle. 

We will build an agent to perform this task by using computer vision techniques, which forms a prediction on the best route to take via a clock-face prediction method. This chassis will have a back actuator, stabilizer and neck actuator. Once attempting the terrain, the robot will need to use its chassis features to help it navigate over the landscape. 

\section{Ethical considerations}
No ethical approval is needed for this project. 
While there are indisputable risks of dual use in AI research, at the fundamental level that I am working on, I have made a conscious decision to prioritise Open Science and all of my code will be publicly available on Github. 

In terms of training data used for images we will have to consider the dangers of people being in visual perception, thus consider the GDPR rules. As the resolution of images will be low, this will not be recognizable. 


\section{Background Literature}
\subsection{Whegs}

The Wheg design is a wheel-leg hybrid that improves the climb of a mechanical system while maintaining low energy consumption \cite{moonrover}. Robotic legs using multiple servos have a high current draw, in addition to algorithmic complexity due to the need for inverse kinematics \cite{kinematics}. A standard wheel has low energy consumption due to a single axis continuous rotation; however, it is limited when climbing over advanced terrain. 

\begin{figure}[H]
\centering
  \includegraphics[width=0.4\linewidth]{whegv1.PNG}
  \caption{Prototype of the Wheg robot to test out the wheg design, in addition the hardware required. This prototype ran on a Raspberry Pi zero and used a phone charger cell providing 5.1V and a maximum of 2A of current.}
  \label{figure : robot}
\end{figure}

The Wheg outperforms a wheel at uneven terrain navigation due to its terrain-gripping design  \cite{cockroach}. The Wheg is easily manufactured via 3D printing, and there are multiple design variations of the Wheg which suit different purposes \cite{whegDesign}. 

The European Space Agency adopted this design for the PROLERO project. This project used a more straightforward form of actuation where the legs were rods rotating on one axis. This design could at maximum travel over obstacles less than or equal to a height of 10cm. The total mass was 1.5kg making it light for space travel. The rover passed the tests at the ESA planetary utilisation facility, thus confirming the model's validity. \cite{esa} 
\begin{figure}[H]
\centering
  \includegraphics[width=0.4\linewidth]{prolero.png}
  \caption{Figure howing the PROLERO robot taken from ESA }
  \label{figure : robot}
\end{figure}

Other designs on offer are caterpillar tracks which have good energy efficiency due to the optimized traction system. They do, however, have higher weight and are more difficult to repair. The robot would be inoperable with link breakage, whereas, with wheels or Whegs, it could continue to move with worn-down tyres. 
\subsection{Cockroaches and Bio-inspired Robotics}
Research on cockroaches explored the use of cockroach-inspired limbs and movement. This involved a bend in the back in increasing climb over obstacles. This robot used a wheg design to improve its advancement, inspired by the cockroach leg, brought into the phase when the cockroach climbs. \cite{cockroach} 

\begin{figure}[H]
\centering
  \includegraphics[width=0.7\linewidth]{cock.png}
  \caption{Figure taken from ‘Comparing cockroach and Whegs robot body motions’ showing the cockroach rotation to an obstacle. This is compared to a bio-inspired robot. }
  \label{figure : robot}
\end{figure}

\subsection{Reinforcement Learning}
Reinforcement learning is a machine learning approach where a neural network trains under a series of trials. The optimization is achieved by implementing a genetic algorithm to guide training towards a solution. 

This approach has been deployed for route planning robots to plot a solution on different terrain. The reinforcement learning approach was successful in a small number of trials. This method used a neural network that took state information to predict the next step. The research was carried out in simulation rather than a physical agent. \cite{reinforcementLearning} 

\begin{figure}[H]
\centering
  \includegraphics[width=0.5\linewidth]{RFdiag.PNG}
  \caption{Reinforcement learning simplified showing. }
  \label{figure : robot}
\end{figure}

Reinforcement learning comprises an agent, environment, state, reward, and action. The agent is the entity to which the reinforcement learning applies, such as a robot or sprite. The environment is the area in which the agent will roam., where each state is the current agent position within that environment. The agent behaviour that is wanted is rewarded at the end of each trial.  

\subsubsection{Markov decision process}
The Markov model states that the future is independent of the past given the present. This is denoted mathematically by using P[t] to represent the current state of the agent, therefore P[t+1] represents the next state \cite{RFL}. 
\begin{equation}
 P[S_{t+1} \mid S_{t}] = P[S_{t+1} \mid S_{1}, ... , S_{t}]
\end{equation}
State transition probability is given by the following equation:
\begin{equation}
 P_{ss{}'} = \mathbb{P}[S_{t+1}=s{}' \mid S_{t}=s]
\end{equation}

\subsubsection{Genetic algorithm optimization}
An approach to reinforcement learning is to generate the weights and biases via a Gaussian distribution within a one-dimensional array. Each generation will allow mutation of these values. Mutation functions fit Gaussian noise on top of the current encoded data, which alters the operation of the neural network when applied.

One optimization approach uses a Microbial algorithm that generates a population of Gaussian distributions and trials each of them in a tournament against one another. The winner overwrites the loser. \cite{microbial}

Particle Swarm optimization uses a method inspired by particle physics. When particles are energized through heat and cooled slowly, they move back into place better than if called quickly. This theory applied as a genetic algorithm allows sub-optimal solutions to move away and trial new solutions. \cite{particle}

\subsection{Evaluating performance of robots on terrain}
Current research in rough terrain robotics uses gyroscopic disturbance to determine the roughness of the terrain.  This method makes the completion of different trials over different terrain quantifiable.  \cite{reinforcementLearning} 

Other studies have looked at the coefficient of friction plotted against the climb \cite{measure}.

\begin{figure}[H]
\centering
  \includegraphics[width=0.5\linewidth]{roverGyro.PNG}
  \caption{Figure Taken from a 3D plot of the simulated paths for a moon rover \cite{reinforcementLearning} }
  \label{figure : robot}
\end{figure}

Studies have measured Locomotion performance based on several values, including slippage, required torque, and minimum friction coefficient. These metrics create an overall score, plotted throughout each trial. $\mu$ represents the friction coefficient needed for tangential (R) and normal (N).
\begin{equation}
\mu _{needed} = \frac{R}{N}=\frac{T\cdot r}{N}
\end{equation}

Slippage consumes energy without making the robot move forward. Slippage was calculated using the encoders on wheels. Distance is calculated is using the following equation. The slippage is the difference of ground truth and wheel odometry. \cite{chassisTerrain}
\begin{equation}
D_{istance} = \frac{\Delta _{coder}\cdot 2 \cdot \pi \cdot r}{N_{pulse}\cdot R_{gearbox}} 
\end{equation}

These factors form a Max G score. This G score was used to measure chassis against one another in a table. 

\subsection{Sensors}
Terrain mapping sensing can take many forms. One study used a lidar sensor that would read at four layers to construct a world model. This model creates a 3D perception allowing a hexapod robot to predict movement \cite{laser}. 

Optical flow uses the vectors between pixels in two images taken one immediately after another. This can be used for optical flow alone \cite{optical}. Optical flow can also be used to calculate obstacles and swerve an agent away from the obstruction via depth estimation maps \cite{opticalDepth}. This same depth estimation method was achieved using a convolutional neural network and the Canny edge detector and morphological operators \cite{canny}. 

Depth perception via stereo imaging is another method that requires less training. A hexapod robot used this method with six legs to predict stable movement over uneven terrain. This prediction method was accurate \cite{stereo}.

\begin{figure}[H]
\centering
  \includegraphics[width=0.5\linewidth]{hexapodStereo.PNG}
  \caption{Figure showing Weaver the stereo vision hexapod. The ground is uneven for all legs, therefore the agent must adapt across all legs. }
  \label{figure : robot}
\end{figure}
\subsection{Contributions to the field}


\section{Requirement analysis}
Existing solutions of robotics have not yet looked into the collaboration of bio-inspired cockroaches with reinforcement learning. This project will use a physical robot platform and a simulation of this platform for the gathering of data.

\subsection{User Needs}

\subsection{Ideal system}

\subsection{Limitations}


\subsection{System overview}
\subsubsection{Simulation and application of the Robot}

\subsubsection{Robot platform}
The robot chassis will incorporate a wheg design. This design will need to be able to climb over terrain while maintaining stability. The Whegs will be 3D printed, thus requiring no more significant than 200mm diameter due to the printer capacity. Current designs typically use claw-like hooks on the whegs. This design is limited on specific terrains due to it not being able to reverse. 

The main chassis of the robot will use suspension so that a higher incline on one extremity does not tilt the overall robot. This design was inspired by a Tamiya radio controlled car \cite{tamiya}.


\begin{figure}[H]
\centering
\subfloat[Neutral position]{%
  \includegraphics[clip,width=0.3\columnwidth]{sus1.PNG}%
}
\subfloat[Activated position]{%
  \includegraphics[clip,width=0.3\columnwidth]{sus2.PNG}%
}
\caption{Figure showing the movement of the suspension system design moving over hardware. This uses a single spring shock absorber per Wheg.}
\end{figure}

In terms of back and neck actuation, we will need a pan and tilt style mechanism. The front of the robot chassis will pan left to right. The tilt will be up and down on the axis of gravity. This method will allow the agent to bend its back, thus redistributing weight. The exact process applied in the cockroach research \cite{cockroach}. 

\subsection{Language}
We can use a series of languages to perform this project, both simulation side and on the practical robot. Ideally, the language selected is transferred easily between both methods of investigation. 

Languages that interact well with hardware include Arduino C++. Arduinos are quickly booted up and execute code soon due to storing it in binary format. This method is more complicated for computer vision and machine learning tasks than simpler languages such as Python. 

Python is a high-level language that abstracts away from syntactic detail compared to other languages. This design makes it slower at execution but better at machine learning tasks. 

When Python deploys on hardware, there are two popular methods. One of which is circuit Python, where a small Micro-controller compiles to work as an Arduino but using Python. This approach overcomes speed and complexity issues; however, these boards typically have a low amount of memory. 

On the higher end is the Jetson, a Nvidia-developed board design for machine learning tasks. These are heavily used within brains on boards projects. 

The approach that we will take is using the Raspberry Pi. These are low-cost computers that run a Linux-based operating system. These are typically more expensive than Arduinos, but still much cheaper compared to higher specification models such as the Jetson. Though slower than the micro-controllers listed, it will provide the machine learning tools required for the project.


\section{Project Plan}

\begin{figure}[H]
\centering
  \includegraphics[width=0.8\linewidth]{plan.PNG}
  \caption{Timetable of development }
  \label{figure : robot}
\end{figure}

\subsection{Phase one simulation}

Phase one will focus on developing the navigation methods and a virtual environment to test within. This phase is critical for the project as simulation can test concepts more quickly and cheaply than physical robot testing. 
We will use the Python noise generation library to develop a 3D map of the terrain. 



\subsection{Phase two simulation trials}
The deployment of the simulation will test the theory of using vision to exploit navigation over rough terrain. The agent will need to pick the most accessible routes which minimize the overall energy consumption. There are multiple ways of testing this concept.

\subsection{Phase three building of physical robot}
To understand whether or not this concept works in practice, we must try it on a physical robot. The real world has many more variables which affect the performance of algorithms. Lighting, colour, and shade can have significant effects on the way the robot perceives the environment. 

We will build the robot to deploy the requirements set out. This chassis will use aluminum servo apparatus, and 3D printed Whegs to be light. 

It is essential that this design successfully can climb over terrain and can travel in bi-direction. We will test this using a simple remote control. Once we know the physical limitations, it can help us design the testing environment. 

\subsection{Phase four applying simulation on the physical robot}

\subsection{Phase five evolving back movement}
Evolving back movements is not an essential feature of this project. However, it will significantly improve the agent's ability to climb, as seen in other robots. If there is time, this will be trialed using a reinforcement learning approach to help redistribute weight, thus improving the climb. 

\section{Methods and Preliminary Results}

\subsection{Simulation}
We set up a Python simulation by generating a polygonal map using noise.  The persistence,  octaves, and lacunarity are all altered via parameters in the world creation function. This function formed a map held as a two-dimensional array representing terrain heights numerically. 

\begin{figure}[H]
\centering
  \includegraphics[width=0.9\linewidth]{Sim2d.png}
  \caption{2D simulation plot of a 3D terrain. Random generated points are shown to show the position of agents and rewards. }
  \label{figure : robot}
\end{figure}

As seen in Figure 9 the points are generated to always be on land.  Using the distance formula, we can find how far a point is from the start position and how steep it is. The energy consumed (E) by a robot in a given trial is denoted by the steps taken (S) and the accumulated terrain value of each place (P).

S represents the Manhattan distanced, which was picked in place of the euclidean distance due to increased accuracy with high dimensionality.

\begin{equation}
E_{nergy} = (\mid x1 - x2 \mid  + \mid  y1 - y2 \mid ) \cdot \sum_{i=1}^{S_{teps}} (P_{i})
\end{equation}
The Manhattan method would be used in the case of smaller simulation environments.

\subsection{Robotic hardware}

Throughout the initial testing, there were three designs of Whegs developed. Two of these designs were trialed physically. 
Initial designs of the Wheg used the claw method, where each strut would power more climb. 

\begin{figure}[H]
\centering
  \includegraphics[width=0.5\linewidth]{wheg.PNG}
  \caption{Initial claw design with 4 claws for stable rotation. }
  \label{figure : robot}
\end{figure}


The initial design would struggle to reverse, as predicted. We instead adopted a reversible claw design. 

\begin{figure}[H]
\centering
  \includegraphics[width=0.5\linewidth]{whegTri.PNG}
  \caption{Reversible claw design using a tri-claw system for strength. The 4 claw stable rotation was replaced as this design had less gaps thus making it naturally more stable.}
  \label{figure : robot}
\end{figure}


\section{Professional Considerations}

\bibliographystyle{unsrt}
\bibliography{sample}

\end{document}